@startuml

left to right direction
title Class Diagram - SP02
hide empty members



package controllers {
}

class Application {
}

class FamilyService {
}

class RelationService{
}

class AccountService {
}

class TransactionService {
}

class CategoryService {
}


class Family {
}

class Relation {
}

class FamilyMember {
}

package accounts {
}

package transactions {
}

package categories {
}

interface Account {
}

interface Category{
}

interface Transaction {
}

controllers --> Application

Application --> RelationService : has
Application --> TransactionService : has
Application --> FamilyService : has
Application --> AccountService : has
Application --> CategoryService : has

FamilyService --> Family : has list
Family --> FamilyMember : has list
RelationService --> Relation : handles
AccountService ---> accounts : handles
TransactionService ---> transactions : handles
CategoryService ---> categories : handles

Family -> Relation : has list
Family --> accounts : has Cash Account
FamilyMember -> accounts : has list
accounts -> transactions : has list
transactions -* categories : contains

categories .-|> Category : implements
transactions .-|> Transaction : implements
accounts .-|> Account : implements

accounts --* MoneyValue : contains
transactions --* MoneyValue : contains

@enduml






@startuml


left to right direction
title Class Diagram - SP02 CLASS DIAGRAM
skinparam linetype ortho

hide empty members

package controllers {}

package category {}

package accounts {}

class Application {
}

class CategoryService {
}

class FamilyService {
}

class AccountService {
}

class TransactionService {
}

class RelationService{
}

class Family {
}



class Account {
}

class FamilyMember {
}

class MoneyValue {
}

class Relation {
}



interface Account {
}

interface Transaction {
}

interface Category{
}

controllers --> Application
Application --> FamilyService : has
Application --> CategoryService : has
Application --> AccountService : has
Application --> TransactionService : has
Application --> RelationService : has

category --|> Category : implements
CategoryService -> category : handles
'CategoryService -left-> CategoryTreeDTO : creates
'FamilyService -right-> FamilyWithoutAdministratorDTO : creates
FamilyService -> Family : has list
Family --> FamilyMember : has list

FamilyMember -> Account : has list
accounts -|> Account : implements
Account -* AccountData : contains
AccountService -> Account: handles
Family --> Relation : has list
RelationService --> Relation : handles
TransactionService --> Transaction: handles
Account --> Transaction: has list
AccountData -* MoneyValue : contains
Transaction -* MoneyValue : contains


@enduml









@startuml


left to right direction
title Class Diagram - SP02 CLASS DIAGRAM
skinparam linetype ortho

hide empty members

package controllers {}

package category {}

package accounts {}

class Application {
}

class CategoryService {
}

class FamilyService {
}

class AccountService {
}

class TransactionService {
}

class RelationService{
}

class Family {
}



class Account {
}

class FamilyMember {
}

class MoneyValue {
}

class Relation {
}



interface Account {
}

interface Transaction {
}

interface Category{
}

controllers --> Application
Application --> FamilyService : has
Application --> CategoryService : has
Application --> AccountService : has
Application --> TransactionService : has
Application --> RelationService : has

category --|> Category : implements
CategoryService -> category : handles
'CategoryService -left-> CategoryTreeDTO : creates
'FamilyService -right-> FamilyWithoutAdministratorDTO : creates
FamilyService -> Family : has list
Family --> FamilyMember : has list

FamilyMember -> Account : has list
accounts -|> Account : implements
Account -* AccountData : contains
AccountService -> Account: handles
Family -> Relation : has list
RelationService -> Relation : handles
TransactionService -> Transaction: handles
Account --> Transaction: has list
AccountData -* MoneyValue : contains
Transaction -* MoneyValue : contains


@enduml